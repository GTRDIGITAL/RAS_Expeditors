name: Build and deploy RAS Expeditors to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: rasregistryacr.azurecr.io
          username: ${{ secrets.AzureAppService_ContainerUsername_11120a088be645ada2b7611a394df19c }}
          password: ${{ secrets.AzureAppService_ContainerPassword_bb7fc7f5e45547a899f82524d4bc5b73 }}

      - name: Build and push web container
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.web
          push: true
          tags: rasregistryacr.azurecr.io/rasregistryacr/ras_expeditors_web:${{ github.sha }}
          build-args: |
            FLASK_APP=app.py
            FLASK_ENV=production

      - name: Build and push worker container
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.worker
          push: true
          tags: rasregistryacr.azurecr.io/rasregistryacr/ras_expeditors_worker:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - uses: actions/checkout@v3
      
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_f194e555b5274efd8cb7aa0530b04d3e }}

      - name: Set Web App as Container
        shell: pwsh
        run: |
          $profile = [System.Convert]::FromBase64String("${{ secrets.AzureAppService_PublishProfile_f194e555b5274efd8cb7aa0530b04d3e }}")
          $profileXml = [System.Text.Encoding]::UTF8.GetString($profile)
          $xml = [xml]$profileXml
          $creds = $xml.SelectSingleNode("//publishProfile[@publishMethod='MSDeploy']")
          $username = $creds.userName
          $password = $creds.userPWD
          
          $base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(("{0}:{1}" -f $username, $password)))
          $apiUrl = "https://ras-expeditors.scm.azurewebsites.net/api/settings"
          
          $headers = @{
              Authorization = ("Basic {0}" -f $base64AuthInfo)
              "Content-Type" = "application/json"
          }
          
          $body = @{
              DOCKER_ENABLE_CI = "true"
              WEBSITES_ENABLE_APP_SERVICE_STORAGE = "true"
              DOCKER_REGISTRY_SERVER_URL = "https://rasregistryacr.azurecr.io"
              DOCKER_REGISTRY_SERVER_USERNAME = "rasregistryacr"
              WEBSITES_PORT = "80"
          } | ConvertTo-Json
          
          Invoke-RestMethod -Uri $apiUrl -Headers $headers -Method Post -Body $body -ContentType "application/json"

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ras-expeditors
          slot-name: production
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_f194e555b5274efd8cb7aa0530b04d3e }}
          images: rasregistryacr.azurecr.io/rasregistryacr/ras_expeditors_web:${{ github.sha }}
