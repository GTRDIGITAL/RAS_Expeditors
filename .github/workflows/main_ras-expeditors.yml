name: Deploy to Azure Container Apps

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build and push Web image
      run: |
        docker build -f Dockerfile.web -t rasregistryacr.azurecr.io/flask-web:latest .
        echo ${{ secrets.AZURE_CREDENTIALS }} | docker login rasregistryacr.azurecr.io --username $(jq -r .clientId) --password-stdin
        docker push rasregistryacr.azurecr.io/flask-web:latest

    - name: Build and push Worker image
      run: |
        docker build -f Dockerfile.worker -t rasregistryacr.azurecr.io/flask-worker:latest .
        docker push rasregistryacr.azurecr.io/flask-worker:latest

    - name: Deploy Web Container App
      run: |
        az containerapp update \
          --name ras-expeditors-web \
          --resource-group ras_expeditors \
          --image rasregistryacr.azurecr.io/flask-web:latest \
          --env-vars FLASK_APP=app.py FLASK_ENV=production \
                     SECRET_KEY=${{ secrets.SECRET_KEY }} \
                     MYSQL_HOST=${{ secrets.MYSQL_HOST }} \
                     MYSQL_USER=${{ secrets.MYSQL_USER }} \
                     MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
                     MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} \
                     CELERY_BROKER_URL=${{ secrets.REDIS_URL }} \
                     CELERY_RESULT_BACKEND=${{ secrets.REDIS_URL }}

    - name: Deploy Worker Container App
      run: |
        az containerapp update \
          --name ras-expeditors-worker \
          --resource-group ras_expeditors \
          --image rasregistryacr.azurecr.io/flask-worker:latest \
          --env-vars CELERY_BROKER_URL=${{ secrets.REDIS_URL }} \
                     CELERY_RESULT_BACKEND=${{ secrets.REDIS_URL }}
