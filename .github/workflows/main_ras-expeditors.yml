name: Build and deploy container app to Azure Web App - ras-expeditors

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Ia codul din repo
      - uses: actions/checkout@v3

      # Setup pentru build multi-platform (Buildx)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login în Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: rasregistryacr.azurecr.io
          username: ${{ secrets.AzureAppService_ContainerUsername_11120a088be645ada2b7611a394df19c }}
          password: ${{ secrets.AzureAppService_ContainerPassword_bb7fc7f5e45547a899f82524d4bc5b73 }}

      # Build și push imagine în ACR
      - name: Build and push container image to ACR
        uses: docker/build-push-action@v3
        with:
          context: .               # folderul de context (codul aplicației)
          file: ./Dockerfile       # schimbă dacă Dockerfile-ul nu e în root
          push: true
          tags: rasregistryacr.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_11120a088be645ada2b7611a394df19c }}/ras_expeditors_web:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      # Deploy în App Service folosind imaginea din ACR
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ras-expeditors
          slot-name: production
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_f194e555b5274efd8cb7aa0530b04d3e }}
          images: rasregistryacr.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_11120a088be645ada2b7611a394df19c }}/ras_expeditors_web:${{ github.sha }}
